<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Security Firm</title>
    <style>
      :root {
        --theme-color: #0d47a1;
      }

      body {
        font-family: Arial, sans-serif;
        margin: 0;
      }

      header {
        background-color: var(--theme-color);
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 10px;
      }

      .headerDiv {
        display: flex;
        align-items: center;
      }

      #toggleSidebar {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
        margin-right: 10px;
      }

      .container {
        display: flex;
        flex-direction: column;
        height: calc(100vh - 100px); /* Adjusted for header height */
      }

      .sidebar {
        display: flex;
        background-color: #333;
        padding: 10px;
        width: 100%;
        justify-content: space-around;
      }

      .sidebar ul {
        display: flex;
        list-style-type: none;
        padding: 0;
        margin: 0;
      }

      .sidebar ul li {
        margin: 0 15px;
      }

      .sidebar ul li a {
        text-decoration: none;
        color: white;
      }

      main {
        flex: 1;
        padding: 20px;
        overflow-y: auto;
      }

      .sidebar.collapsed {
        display: none;
      }

      @media (max-width: 768px) {
        .sidebar {
          flex-direction: column;
          align-items: center;
        }

        .sidebar ul {
          flex-direction: column;
        }

        .sidebar ul li {
          margin: 10px 0;
        }
      }

      .logout-button {
        background-color: black;
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s ease;
      }

      .logout-button:hover {
        background-color: #9B49A3;
      }

      .container2 {
        max-width: 600px;
        margin: 50px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
      h2 {
        text-align: center;
        color: #0d47a1;
      }
      label,
      select,
      button {
        display: block;
        margin-top: 10px; /* Adjusted to match the Create Post page */
        color: #0d47a1;
      }
      select {
        width: 100%;
        padding: 10px;
        margin-top: 5px;
        margin-bottom: 15px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
      }
      button {
        width: 100%;
        background-color: #0d47a1;
        color: white;
        padding: 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
      button:hover {
        background-color: #9B49A3;
      }
    </style>
  </head>
  <body>
    <header>
      <div class="headerDiv">
        <!-- <button id="toggleSidebar">â˜°</button> -->
        <h1>Security Management System</h2>
      </div>
      <a href="/logout"><button class="logout-button">Logout</button></a>
    </header>
    <div class="container">
      <nav id="sidebar" class="sidebar">
        <ul>
          <li><a href="/dashboard">Home</a></li>
          <li><a href="/viewPosts">View Posts</a></li>
          <li><a href="/createPost">Create Post</a></li>
          <!-- <li><a href="/users">admin</a></li> -->
          <li><a href="/assignPost">Assign post</a></li>
          <li><a href="/createReport">Create Report</a></li>
          <li><a href="/viewReport">View Reports</a></li>
          <li><a href="/users">Users</a></li>

        </ul>
      </nav>
      <main>
        <div class="container2">
          <h2>Assign User to Post</h2>
          <form id="assignForm">
            <label for="users">Select User:</label>
            <select id="users" name="username"></select
            ><br /><br />

            <label for="posts">Select Post:</label>
            <select id="posts" name="postId"></select
            ><br /><br />

            <button type="submit">Assign</button>
          </form>
        </div>
      </main>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        fetchUsers();
        fetchPosts();

        document
          .getElementById("assignForm")
          .addEventListener("submit", function (event) {
            event.preventDefault();
            const selectedUserOption =
              document.getElementById("users").selectedOptions[0];
            const username = selectedUserOption.text;
            const userId = selectedUserOption.value.split("(")[1].slice(0, -1); // Extracting userId from combined string

            const selectedPostOption =
              document.getElementById("posts").selectedOptions[0];
            const postId = selectedPostOption.value;

            if (username && userId && postId) {
              assignUserToPost({ username, userId }, postId);
            } else {
              alert("Please select a user and a post.");
            }
          });
      });

      async function fetchUsers() {
        const response = await fetch("http://localhost:3000/getUsers");
        const data = await response.json();
        if (data.Status === "Success") {
          const usersDropdown = document.getElementById("users");
          data.users.forEach((user) => {
            const option = document.createElement("option");
            option.value = `${user.username}(${user.id})`; // Combine username and ID
            option.text = user.username; // Display only the username
            usersDropdown.add(option);
          });
        }
      }

      async function fetchPosts() {
        const response = await fetch("http://localhost:3000/getPosts");
        const data = await response.json();
        if (data.Status === "Success") {
          const postsDropdown = document.getElementById("posts");
          data.posts.forEach((post) => {
            const option = document.createElement("option");
            option.value = post.id;
            option.text = post.name;
            postsDropdown.add(option);
          });
        }
      }

      async function assignUserToPost(userDetails, postId) {
        const { username, userId } = userDetails;
        const response = await fetch("http://localhost:3000/assignPost", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ username, userId, postId }),
        });

        const data = await response.json();
        if (data.Status === "SUCCESS") {
          alert("assigned user to post successfuly!");
          window.location.href = "./dashboard";
        } else {
          alert("Failed to assign user to post.");
        }
      }
    </script>
  </body>
</html>
